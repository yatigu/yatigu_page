{"ast":null,"code":"var _jsxFileName = \"/Users/sinsanghun/yatigu_page/src/component/Station.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Station.css';\nimport Modal from './Modal';\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  label: {\n    display: 'block'\n  },\n  input: {\n    width: 200\n  },\n  listbox: {\n    width: 200,\n    margin: 0,\n    padding: 0,\n    zIndex: 1,\n    position: 'absolute',\n    listStyle: 'none',\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'auto',\n    maxHeight: 200,\n    border: '1px solid rgba(0,0,0,.25)',\n    '& li[data-focus=\"true\"]': {\n      backgroundColor: '#4a8df6',\n      color: 'white',\n      cursor: 'pointer'\n    },\n    '& li:active': {\n      backgroundColor: '#2977f5',\n      color: 'white'\n    }\n  }\n}));\n\nconst Station = () => {\n  const [names, setNames] = useState([]); //기차역 전부다 때려박은거\n\n  const [isModalOpen, toggleModal] = useState(false);\n  const [stationList, setStationList] = useState([[]]); // 초성별 기차역 배열\n\n  const [initialList, setInitialList] = useState([]); //초성 리스트\n\n  const [initial, setInitial] = useState(0); //초성 선택\n\n  const [station, setStation] = useState();\n\n  const onClick = async () => {\n    try {\n      const response = await axios.get('http://15.165.170.3:8000/info/stations/');\n      const _initials = ['ㄱ', 'ㄴ', 'ㄷ', 'ㄹ', 'ㅁ', 'ㅅ', 'ㅇ', 'ㅈ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'];\n      setStationList(response.data.stations);\n      toggleModal(true);\n      setInitialList(_initials);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const onSearch = async () => {\n    try {\n      const response = await axios.get('http://15.165.170.3:8000/info/stations/');\n      var _names = [];\n      setStationList(response.data.stations);\n\n      for (var i in stationList) {\n        for (var j in stationList[i]) {\n          _names = _names.concat(stationList[i][j]);\n        }\n      }\n\n      setNames(_names); // console.log(\"eEEEE\");\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const classes = useStyles();\n  const {\n    getRootProps,\n    getInputLabelProps,\n    getInputProps,\n    getListboxProps,\n    getOptionProps,\n    groupedOptions,\n    value\n  } = useAutocomplete({\n    //   id: 'use-autocomplete-demo',\n    options: names,\n    getOptionLabel: option => option\n  }); // const nameList = names.map((name,index) => <option key = { index } > { name } </option>);\n\n  const ButtonList = initialList.map((ini, index) => React.createElement(\"button\", {\n    className: \"right-margin\",\n    key: index,\n    onClick: () => {\n      setInitial(index);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \" \", ini, \" \"));\n  const selectList = stationList[initial].map((cstation, index) => React.createElement(\"option\", {\n    key: index,\n    value: cstation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \" \", cstation, \" \"));\n  console.log(value);\n  console.log(station);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    valgn: \"top\",\n    className: \"sel-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(\"label\", Object.assign({\n    className: classes.label\n  }, getInputLabelProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), React.createElement(\"input\", Object.assign({\n    onClick: onSearch\n  }, getInputProps(), {\n    onChange: () => console.log(value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }))), groupedOptions.length > 0 ? React.createElement(\"ul\", Object.assign({\n    className: classes.listbox\n  }, getListboxProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), groupedOptions.map((option, index) => React.createElement(\"li\", Object.assign({}, getOptionProps({\n    option,\n    index\n  }), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), \" \", option, \" \"))) : null), React.createElement(\"button\", {\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \" \\uAC80\\uC0C9 \"), React.createElement(Modal, {\n    isOpen: isModalOpen,\n    toggle: toggleModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"\\uAE30\\uCC28\\uC5ED\"), ButtonList, React.createElement(\"div\", {\n    className: \"top-margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    onChange: e => setStation(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, selectList)), React.createElement(\"div\", {\n    className: \"top-margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => toggleModal(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"\\uC120\\uD0DD \\uC644\\uB8CC\")))));\n};\n\nexport default Station;","map":{"version":3,"sources":["/Users/sinsanghun/yatigu_page/src/component/Station.js"],"names":["React","useState","axios","Modal","useAutocomplete","makeStyles","useStyles","theme","label","display","input","width","listbox","margin","padding","zIndex","position","listStyle","backgroundColor","palette","background","paper","overflow","maxHeight","border","color","cursor","Station","names","setNames","isModalOpen","toggleModal","stationList","setStationList","initialList","setInitialList","initial","setInitial","station","setStation","onClick","response","get","_initials","data","stations","e","console","log","onSearch","_names","i","j","concat","classes","getRootProps","getInputLabelProps","getInputProps","getListboxProps","getOptionProps","groupedOptions","value","options","getOptionLabel","option","ButtonList","map","ini","index","selectList","cstation","length","target"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\nimport './Station.css';\nimport Modal from './Modal';\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    label: {\n      display: 'block',\n    },\n    input: {\n      width: 200,\n    },\n    listbox: {\n      width: 200,\n      margin: 0,\n      padding: 0,\n      zIndex: 1,\n      position: 'absolute',\n      listStyle: 'none',\n      backgroundColor: theme.palette.background.paper,\n      overflow: 'auto',\n      maxHeight: 200,\n      border: '1px solid rgba(0,0,0,.25)',\n      '& li[data-focus=\"true\"]': {\n        backgroundColor: '#4a8df6',\n        color: 'white',\n        cursor: 'pointer',\n      },\n      '& li:active': {\n        backgroundColor: '#2977f5',\n        color: 'white',\n      },\n    },\n}));\n\nconst Station = () => {\n\n    const [names, setNames] = useState([]); //기차역 전부다 때려박은거\n    const [isModalOpen, toggleModal] = useState(false); \n    const [stationList, setStationList] = useState([[]]); // 초성별 기차역 배열\n    const [initialList, setInitialList] = useState([]); //초성 리스트\n    const [initial, setInitial] = useState(0); //초성 선택\n    const [station, setStation] = useState();\n\n    const onClick = async () => {\n\n        try {\n            const response = await axios.get('http://15.165.170.3:8000/info/stations/');\n            const _initials = ['ㄱ','ㄴ','ㄷ','ㄹ','ㅁ','ㅅ','ㅇ','ㅈ','ㅊ','ㅋ','ㅌ','ㅍ','ㅎ'];\n \n            setStationList(response.data.stations);\n            toggleModal(true);\n \n            setInitialList(_initials);\n\n        } catch (e) {\n            console.log(e);\n        }\n\n    };\n\n\n    const onSearch = async () => {\n\n        try {\n            const response = await axios.get('http://15.165.170.3:8000/info/stations/');\n            var _names = [];\n \n            setStationList(response.data.stations);\n \n            for(var i in stationList) {\n                for(var j in stationList[i]) {\n                    _names = _names.concat(stationList[i][j]);\n                }\n            }\n\n            setNames(_names);\n            // console.log(\"eEEEE\");\n\n        } catch (e) {\n            console.log(e);\n        }\n\n    };\n\n\n    const classes = useStyles();\n    const {\n      getRootProps,\n      getInputLabelProps,\n      getInputProps,\n      getListboxProps,\n      getOptionProps,\n      groupedOptions,\n      value,\n    } = useAutocomplete({\n    //   id: 'use-autocomplete-demo',\n      options: names,\n      getOptionLabel: option => option,\n    });\n    \n    // const nameList = names.map((name,index) => <option key = { index } > { name } </option>);\n    const ButtonList = initialList.map((ini,index) => <button className = \"right-margin\" key = { index } onClick = { () => { setInitial(index) } }> { ini } </button>  );\n    const selectList = stationList[initial].map((cstation, index) => <option key = {index} value = {cstation}> { cstation } </option>);\n    \n    console.log(value)\n    console.log(station)\n\n    return ( \n        <div>\n            <div valgn=\"top\" className = \"sel-box\">\n                <div>\n                    <div {...getRootProps()}>\n                        <label className = {classes.label} {...getInputLabelProps()}>\n                        </label>\n                        <input onClick = { onSearch }  {...getInputProps()} onChange = {()=>console.log(value)}/>\n                    </div >\n                        {groupedOptions.length > 0 ? (\n                            <ul className = {classes.listbox} {...getListboxProps()}>\n                                {groupedOptions.map((option, index) => (\n                                    <li {...getOptionProps({ option, index})} > { option } </li>\n                                ))}\n                            </ul>\n                        ): null}\n                </div>\n\n                <button onClick = { onClick } > 검색 </button>\n                <Modal isOpen = { isModalOpen } toggle = { toggleModal } >\n                    <h1>기차역</h1>\n                        { ButtonList }\n                    <div className = \"top-margin\">\n                        <select onChange={(e) => setStation(e.target.value)}> \n                            { selectList }\n                        </select> \n                    </div>\n                    <div className = \"top-margin\">\n                        <button onClick={() => toggleModal(false)}>선택 완료</button>\n                    </div>\n                </Modal>\n            </div>\n        </div>\n    );\n};\n\nexport default Station;"]},"metadata":{},"sourceType":"module"}