{"ast":null,"code":"import _slicedToArray from \"/Users/sinsanghun/yatigu_page/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sinsanghun/yatigu_page/src/component/Station.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Station.css';\nimport Modal from './Modal';\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  label: {\n    display: 'block'\n  },\n  input: {\n    width: 200\n  },\n  listbox: {\n    width: 200,\n    margin: 0,\n    padding: 0,\n    zIndex: 1,\n    position: 'absolute',\n    listStyle: 'none',\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'auto',\n    maxHeight: 200,\n    border: '1px solid rgba(0,0,0,.25)',\n    '& li[data-focus=\"true\"]': {\n      backgroundColor: '#4a8df6',\n      color: 'white',\n      cursor: 'pointer'\n    },\n    '& li:active': {\n      backgroundColor: '#2977f5',\n      color: 'white'\n    }\n  }\n}));\n\nconst Station = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        names = _useState2[0],\n        setNames = _useState2[1]; //기차역 전부다 때려박은거\n\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isModalOpen = _useState4[0],\n        toggleModal = _useState4[1];\n\n  const _useState5 = useState([[]]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        stationList = _useState6[0],\n        setStationList = _useState6[1]; // 초성별 기차역 배열\n\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        initialList = _useState8[0],\n        setInitialList = _useState8[1]; //초성 리스트\n\n\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        initial = _useState10[0],\n        setInitial = _useState10[1]; //초성 선택\n\n\n  const _useState11 = useState(),\n        _useState12 = _slicedToArray(_useState11, 2),\n        from = _useState12[0],\n        SetFrom = _useState12[1];\n\n  const _useState13 = useState(),\n        _useState14 = _slicedToArray(_useState13, 2),\n        to = _useState14[0],\n        SetTo = _useState14[1];\n\n  const onClick = async () => {\n    try {\n      const response = await axios.get('http://15.165.170.3:8000/info/stations/');\n      const _initials = ['ㄱ', 'ㄴ', 'ㄷ', 'ㄹ', 'ㅁ', 'ㅅ', 'ㅇ', 'ㅈ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'];\n      setStationList(response.data.stations);\n      toggleModal(true);\n      setInitialList(_initials);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const onSearch = async () => {\n    try {\n      const response = await axios.get('http://15.165.170.3:8000/info/stations/');\n      var _names = [];\n      setStationList(response.data.stations);\n\n      for (var i in stationList) {\n        for (var j in stationList[i]) {\n          _names = _names.concat(stationList[i][j]);\n        }\n      }\n\n      setNames(_names);\n      console.log(\"eEEEE\");\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const classes = useStyles();\n\n  const _useAutocomplete = useAutocomplete({\n    //   id: 'use-autocomplete-demo',\n    options: names,\n    getOptionLabel: option => option\n  }),\n        getRootProps = _useAutocomplete.getRootProps,\n        getInputLabelProps = _useAutocomplete.getInputLabelProps,\n        getInputProps = _useAutocomplete.getInputProps,\n        getListboxProps = _useAutocomplete.getListboxProps,\n        getOptionProps = _useAutocomplete.getOptionProps,\n        groupedOptions = _useAutocomplete.groupedOptions;\n\n  const nameList = names.map((name, index) => React.createElement(\"option\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \" \", name, \" \"));\n  const ButtonList = initialList.map((ini, index) => React.createElement(\"button\", {\n    className: \"right-margin\",\n    key: index,\n    onClick: () => {\n      setInitial(index);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \" \", ini, \" \"));\n  const selectList = stationList[initial].map((station, index) => React.createElement(\"option\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \" \", station, \" \"));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(\"label\", Object.assign({\n    className: classes.label\n  }, getInputLabelProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })), React.createElement(\"input\", Object.assign({\n    onClick: onSearch,\n    className: classes.input\n  }, getInputProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }))), groupedOptions.length > 0 ? React.createElement(\"ul\", Object.assign({\n    className: classes.listbox\n  }, getListboxProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), groupedOptions.map((option, index) => React.createElement(\"li\", Object.assign({}, getOptionProps({\n    option,\n    index\n  }), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), option))) : null), React.createElement(\"div\", {\n    valgn: \"top\",\n    className: \"sel-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \" \\uAC80\\uC0C9 \"), React.createElement(Modal, {\n    isOpen: isModalOpen,\n    toggle: toggleModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"\\uAE30\\uCC28\\uC5ED\"), ButtonList, React.createElement(\"div\", {\n    className: \"top-margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, selectList)), React.createElement(\"div\", {\n    className: \"top-margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => toggleModal(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"\\uC120\\uD0DD \\uC644\\uB8CC\")))));\n};\n\nexport default Station;","map":{"version":3,"sources":["/Users/sinsanghun/yatigu_page/src/component/Station.js"],"names":["React","useState","axios","Modal","useAutocomplete","makeStyles","useStyles","theme","label","display","input","width","listbox","margin","padding","zIndex","position","listStyle","backgroundColor","palette","background","paper","overflow","maxHeight","border","color","cursor","Station","names","setNames","isModalOpen","toggleModal","stationList","setStationList","initialList","setInitialList","initial","setInitial","from","SetFrom","to","SetTo","onClick","response","get","_initials","data","stations","e","console","log","onSearch","_names","i","j","concat","classes","options","getOptionLabel","option","getRootProps","getInputLabelProps","getInputProps","getListboxProps","getOptionProps","groupedOptions","nameList","map","name","index","ButtonList","ini","selectList","station","length"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\nimport './Station.css';\nimport Modal from './Modal';\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    label: {\n      display: 'block',\n    },\n    input: {\n      width: 200,\n    },\n    listbox: {\n      width: 200,\n      margin: 0,\n      padding: 0,\n      zIndex: 1,\n      position: 'absolute',\n      listStyle: 'none',\n      backgroundColor: theme.palette.background.paper,\n      overflow: 'auto',\n      maxHeight: 200,\n      border: '1px solid rgba(0,0,0,.25)',\n      '& li[data-focus=\"true\"]': {\n        backgroundColor: '#4a8df6',\n        color: 'white',\n        cursor: 'pointer',\n      },\n      '& li:active': {\n        backgroundColor: '#2977f5',\n        color: 'white',\n      },\n    },\n}));\n\nconst Station = () => {\n\n    const [names, setNames] = useState([]); //기차역 전부다 때려박은거\n    const [isModalOpen, toggleModal] = useState(false); \n    const [stationList, setStationList] = useState([[]]); // 초성별 기차역 배열\n    const [initialList, setInitialList] = useState([]); //초성 리스트\n    const [initial, setInitial] = useState(0); //초성 선택\n    const [from, SetFrom] = useState();\n    const [to,SetTo] = useState();\n\n    const onClick = async () => {\n\n        try {\n            const response = await axios.get('http://15.165.170.3:8000/info/stations/');\n            const _initials = ['ㄱ','ㄴ','ㄷ','ㄹ','ㅁ','ㅅ','ㅇ','ㅈ','ㅊ','ㅋ','ㅌ','ㅍ','ㅎ'];\n \n            setStationList(response.data.stations);\n            toggleModal(true);\n \n            setInitialList(_initials);\n\n        } catch (e) {\n            console.log(e);\n        }\n\n    };\n\n\n    const onSearch = async () => {\n\n        try {\n            const response = await axios.get('http://15.165.170.3:8000/info/stations/');\n            var _names = [];\n \n            setStationList(response.data.stations);\n \n            for(var i in stationList) {\n                for(var j in stationList[i]) {\n                    _names = _names.concat(stationList[i][j]);\n                }\n            }\n\n            setNames(_names);\n            console.log(\"eEEEE\");\n\n        } catch (e) {\n            console.log(e);\n        }\n\n    };\n\n\n    const classes = useStyles();\n    const {\n      getRootProps,\n      getInputLabelProps,\n      getInputProps,\n      getListboxProps,\n      getOptionProps,\n      groupedOptions,\n    } = useAutocomplete({\n    //   id: 'use-autocomplete-demo',\n      options: names,\n      getOptionLabel: option => option,\n    });\n  \n\n    const nameList = names.map((name,index) => <option key = { index } > { name } </option>);\n    const ButtonList = initialList.map((ini,index) => <button className = \"right-margin\" key = { index } onClick = { () => { setInitial(index) } }> { ini } </button>  );\n    const selectList = stationList[initial].map((station, index) => <option key = {index}> { station } </option>);\n\n    return ( \n        <div>\n            <div>\n                <div {...getRootProps()}>\n                    <label className = {classes.label} {...getInputLabelProps()}>\n                    </label>\n                    <input onClick = { onSearch } className = {classes.input} {...getInputProps()} />\n                </div>\n                    {groupedOptions.length > 0 ? (\n                        <ul className = {classes.listbox} {...getListboxProps()}>\n                        {groupedOptions.map((option, index) => (\n                            <li {...getOptionProps({ option, index })}>{option}</li>\n                        ))}\n                        </ul>\n                    ) : null}\n            </div>\n\n            <div valgn=\"top\" className = \"sel-box\">\n                <button onClick = { onClick } > 검색 </button>\n                <Modal isOpen = { isModalOpen } toggle = { toggleModal } >\n                    <h1>기차역</h1>\n                        { ButtonList }\n                    <div className = \"top-margin\">\n                        <select>\n                            { selectList }\n                        </select> \n                    </div>\n                    <div className = \"top-margin\">\n                        <button onClick={() => toggleModal(false)}>선택 완료</button>\n                    </div>\n                </Modal>\n            </div>\n        </div>\n    );\n};\n\nexport default Station;"]},"metadata":{},"sourceType":"module"}