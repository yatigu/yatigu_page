{"ast":null,"code":"var _jsxFileName = \"/Users/sinsanghun/yatigu_page/src/component/Menu.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Station from './Station';\nimport './Menu.css'; // import Reservation from './Reservation';\n\nconst Menu = () => {\n  const [from, setFrom] = useState();\n  const [to, setTo] = useState();\n  console.log(\"from:\", from);\n  console.log(\"to:\", to);\n  const [tdata, setData] = useState();\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const onClick = async () => {\n    // let frd = new FormData();\n    // frd.append('date', '20200202');\n    // frd.append('hour', '160000');\n    // frd.append('start', '서울');\n    // frd.append('end', '부산');\n    // console.log(frd)\n    try {\n      const response = await axios.get('http://15.165.170.3:8000/info/tickets/', {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        params: {\n          date: '20200225',\n          hour: '160000',\n          start: '김천',\n          end: '부산'\n        }\n      });\n      setData(response.data.tickets); // for(var i in tdata) {\n      //     console.log(tdata[i])\n      //     rows.concat(tdata[i].구분, tdata[i].도착시간, tdata[i].열차번호, tdata[i].도착시간)\n      // }\n\n      console.log(rows); // const body = { date: '20200220', hour: '160000', start:'서울', end:'부산' };\n      // axios({\n      //     url:'http://15.165.170.3:8000/info/tickets/',\n      //     method:'GET',\n      //     headers:{\n      //     'Content-Type':'multipart/form-data'\n      //     },\n      //     data:body,\n      // })\n      // setData(response);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"menu-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"fieldlist\", {\n    className: \"station-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    className: \"menu-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"\\uC2B9\\uCC28\\uAD8C \\uC608\\uB9E4\\uD558\\uAE30\"), React.createElement(\"ul\", {\n    className: \"menu-ul\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"li-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"menu-leg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \" \\uCD9C\\uBC1C\\uC5ED \"), React.createElement(Station, {\n    setStation: setFrom,\n    station: from,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }))), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"li-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"menu-leg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \" \\uB3C4\\uCC29\\uC5ED \"), React.createElement(Station, {\n    setStation: setTo,\n    station: to,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }))), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"li-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"date-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"\\uCD9C\\uBC1C\\uC77C \"), React.createElement(\"input\", {\n    className: \"menu-input-date\",\n    type: \"date\",\n    name: \"date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }))), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"li-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"time-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"\\uC2DC\\uAC04\"), React.createElement(\"input\", {\n    className: \"menu-input-time\",\n    type: \"time\",\n    name: \"time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"\\uAE30\\uCC28 \\uAC80\\uC0C9\\uD558\\uAE30\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, tdata && React.createElement(\"textarea\", {\n    rows: 7,\n    value: JSON.stringify(tdata, null, 2),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, columns.map(column => React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, column.label)))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, columns.map(column => {\n      const value = row[column.id];\n      return React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, column.format && typeof value === 'number' ? column.format(value) : value);\n    }));\n  })))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }))));\n};\n\nexport default Menu;","map":{"version":3,"sources":["/Users/sinsanghun/yatigu_page/src/component/Menu.js"],"names":["React","useState","axios","Station","Menu","from","setFrom","to","setTo","console","log","tdata","setData","classes","useStyles","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","onClick","response","get","headers","params","date","hour","start","end","data","tickets","rows","e","JSON","stringify","root","container","columns","map","column","id","align","minWidth","label","slice","row","code","format","length"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\nimport Station from './Station';\nimport './Menu.css';\n// import Reservation from './Reservation';\n\n\nconst Menu = () => {\n    \n    const [from, setFrom] = useState();\n    const [to, setTo] = useState();\n    console.log(\"from:\",from);\n    console.log(\"to:\",to);\n    const [tdata,setData] = useState();\n\n\n    const classes = useStyles();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  \n    const handleChangePage = (event, newPage) => {\n      setPage(newPage);\n    };\n  \n    const handleChangeRowsPerPage = event => {\n      setRowsPerPage(+event.target.value);\n      setPage(0);\n    };\n\n    const onClick = async () => {\n\n        // let frd = new FormData();\n        \n        // frd.append('date', '20200202');\n        // frd.append('hour', '160000');\n        // frd.append('start', '서울');\n        // frd.append('end', '부산');\n\n        // console.log(frd)\n\n        try {\n            const response = await axios.get('http://15.165.170.3:8000/info/tickets/' , {\n                    headers : { \"Content-Type\": \"multipart/form-data\"} ,\n                    params : { \n                                date : '20200225',\n                                hour : '160000',\n                                start : '김천',\n                                end : '부산'\n                \n                            }\n                });\n            setData(response.data.tickets)\n            \n            // for(var i in tdata) {\n            //     console.log(tdata[i])\n            //     rows.concat(tdata[i].구분, tdata[i].도착시간, tdata[i].열차번호, tdata[i].도착시간)\n            // }\n\n            console.log(rows)\n\n            // const body = { date: '20200220', hour: '160000', start:'서울', end:'부산' };\n            // axios({\n            //     url:'http://15.165.170.3:8000/info/tickets/',\n            //     method:'GET',\n            //     headers:{\n            //     'Content-Type':'multipart/form-data'\n            //     },\n            //     data:body,\n            // })\n            // setData(response);\n        } catch (e) {\n            console.log(e);\n        }\n\n    };\n\n\n    return (\n        <>\n            <div className = \"menu-wrapper\">\n                <fieldlist className = \"station-wrapper\">\n                    <legend className = \"menu-title\">승차권 예매하기</legend>\n                    <ul className = \"menu-ul\">\n                        <li className = \"li-wrapper\">\n                            <label className = \"menu-leg\"> 출발역 </label>\n                            <Station setStation = {setFrom} station = {from}></Station>\n                        </li>\n                    </ul>\n                    <ul>\n                        <li className = \"li-wrapper\">\n                            <label className = \"menu-leg\"> 도착역 </label>\n                            <Station setStation = {setTo} station = {to}></Station>\n                        </li>\n                    </ul>\n                    <ul>\n                        <li className = \"li-wrapper\">\n                            <label className = \"date-wrapper\">출발일 </label>\n                            <input className = \"menu-input-date\" type = \"date\" name = \"date\"/>\n                        </li>\n                    </ul>\n                    <ul>\n                        <li className= \"li-wrapper\">\n                            <label className = \"time-wrapper\">시간</label>\n                            <input className = \"menu-input-time\" type = \"time\" name = \"time\"/>\n                        </li>\n                    </ul>\n                    <div>\n                        <button onClick={onClick}>기차 검색하기</button>\n                    </div>\n                    <div>\n                        {tdata && <textarea rows={7} value = {JSON.stringify(tdata,null,2)}/>}\n                    </div>\n                </fieldlist>\n            </div>\n            <div>\n                <Paper className={classes.root}>\n                    <TableContainer className={classes.container}>\n                        <Table stickyHeader aria-label=\"sticky table\">\n                        <TableHead>\n                            <TableRow>\n                            {columns.map(column => (\n                                <TableCell\n                                key={column.id}\n                                align={column.align}\n                                style={{ minWidth: column.minWidth }}\n                                >\n                                {column.label}\n                                </TableCell>\n                            ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n                            return (\n                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                                {columns.map(column => {\n                                    const value = row[column.id];\n                                    return (\n                                    <TableCell key={column.id} align={column.align}>\n                                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                                    </TableCell>\n                                    );\n                                })}\n                                </TableRow>\n                            );\n                            })}\n                        </TableBody>\n                        </Table>\n                    </TableContainer>\n                    <TablePagination\n                        rowsPerPageOptions={[10, 25, 100]}\n                        component=\"div\"\n                        count={rows.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onChangePage={handleChangePage}\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                    />\n                    </Paper>\n                </div>\n            \n        </>\n    )\n}\n\nexport default Menu;"]},"metadata":{},"sourceType":"module"}